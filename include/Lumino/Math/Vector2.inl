
LN_NAMESPACE_BEGIN

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2::Vector2()
{
	x = y = 0.0f;
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2::Vector2(float x_, float y_)
{
	x = x_;
	y = y_;
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline void Vector2::Set(float x_, float y_)
{
	x = x_;
	y = y_;
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator += (const Vector2& v)
{
	x += v.x;
	y += v.y;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator += (float v)
{
	x += v;
	y += v;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator -= (const Vector2& v)
{
	x -= v.x;
	y -= v.y;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator -= (float v)
{
	x -= v;
	y -= v;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator *= (const Vector2& v)
{
	x *= v.x;
	y *= v.y;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator *= (float v)
{
	x *= v;
	y *= v;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator /= (const Vector2& v)
{
	x /= v.x;
	y /= v.y;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2& Vector2::operator /= (float v)
{
	v = 1.0f / v;
	x *= v;
	y *= v;
	return (*this);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator + (const Vector2& v1, const Vector2& v2)
{
	return Vector2(
		v1.x + v2.x,
		v1.y + v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator + (const Vector2& v1, float v2)
{
	return Vector2(
		v1.x + v2,
		v1.y + v2);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator + (float v1, const Vector2& v2)
{
	return Vector2(
		v1 + v2.x,
		v1 + v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator - (const Vector2& v1, const Vector2& v2)
{
	return Vector2(
		v1.x - v2.x,
		v1.y - v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator - (const Vector2& v1, float v2)
{
	return Vector2(
		v1.x - v2,
		v1.y - v2);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator - (float v1, const Vector2& v2)
{
	return Vector2(
		v1 - v2.x,
		v1 - v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator * (const Vector2& v1, const Vector2& v2)
{
	return Vector2(
		v1.x * v2.x,
		v1.y * v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator * (const Vector2& v1, float v2)
{
	return Vector2(
		v1.x * v2,
		v1.y * v2);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator * (float v1, const Vector2& v2)
{
	return Vector2(
		v1 * v2.x,
		v1 * v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator / (const Vector2& v1, const Vector2& v2)
{
	return Vector2(
		v1.x / v2.x,
		v1.y / v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator / (const Vector2& v1, float v2)
{
	v2 = 1.0f / v2;
	return Vector2(
		v1.x * v2,
		v1.y * v2);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator / (float v1, const Vector2& v2)
{
	return Vector2(
		v1 / v2.x,
		v1 / v2.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline Vector2 operator - (const Vector2& v1)
{
	return Vector2(
		-v1.x,
		-v1.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline bool Vector2::operator == (const Vector2& v) const
{
	return (x == v.x && y == v.y);
}

//-------------------------------------------------------------------------
//
//-------------------------------------------------------------------------
inline bool Vector2::operator != (const Vector2& v) const
{
	return (x != v.x || y != v.y);
}

LN_NAMESPACE_END
