
#include <Lumino/Base/Exception.h>
#include <Lumino/IO/AsyncIOTask.h>

namespace Lumino
{

//=============================================================================
// AsyncIOTask
//=============================================================================

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
AsyncIOTask::AsyncIOTask()
	: m_state(AsyncIOState_Idle)
	, m_exception(NULL)
	, m_autoDelete(true)
{
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
AsyncIOTask::~AsyncIOTask()
{
	LN_SAFE_DELETE(m_exception);
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
void AsyncIOTask::SetAutoDelete(bool autoDelete)
{
	m_autoDelete = autoDelete;
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
AsyncIOState AsyncIOTask::GetAsyncIOState() const
{
	return m_state;
}

//-----------------------------------------------------------------------------
//
//-----------------------------------------------------------------------------
Exception* AsyncIOTask::GetException() const
{
	return m_exception;
}

} // namespace Lumino
